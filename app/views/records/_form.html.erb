<%= form_with(model: record) do |form| %>
<% if record.errors.any? %>
<div style="color: red">
  <h2><%= pluralize(record.errors.count, "error") %> prohibited this record from being saved:</h2>

  <ul>
    <% record.errors.each do |error| %>
    <li><%= error.full_message %></li>
    <% end %>
  </ul>
</div>
<% end %>

<select name="selected_option" id="selected_option">
  <option value="" hidden="true" selected>Add a record</option>
  <option value="income_record">Income Record</option>
  <option value="expenditure_record">Expenditure Record</option>
</select>

<div class="income_record">
  <br>
  <% form.label :income_details, style: "display: block" %>
  <%= form.text_field :income_details, placeholder: "Enter income details" %>
</div>

<div class="income_record">
  <br>
  <% form.label :income_amount, style: "display: block" %>
  <%= form.number_field :income_amount, min: 0, step: 0.01, id: "income-amount", placeholder: "Enter income amount" %>
</div>

<div class="expenditure_record">
  <br>
  <% form.label :expenditure_details, style: "display: block" %>
  <%= form.text_field :expenditure_details, placeholder: "Enter expenditure details" %>
</div>

<div class="expenditure_record">
  <br>
  <% form.label :expenditure_amount, style: "display: block" %>
  <%= form.number_field :expenditure_amount, min: 0, step: 0.01, id: "expenditure-amount", placeholder: "Enter expenditure amount" %>
</div>

<div class="expenditure_record">
  <br>
  <%= form.label :expenditure_category, style: "display: block" %>
  <%= form.select :expenditure_category, [["Choose an option", "", {hidden: true}],["Needs", "Needs"], ["Wants", "Wants"]], {selected: "Choose an option"} %>
</div>

<br>

<div id="submit-btn">
  <%= form.submit class:"btn submit-btn btn-normal-inverse" %>
</div>
<% end %>

<style>
  .income_record {
    display: none;
  }

  .expenditure_record {
    display: none;
  }
</style>

<script>
  document.addEventListener("turbo:load", () => {
    const select = document.getElementById("selected_option");
    const incomeForm = document.querySelectorAll(".income_record");
    const expenditureForm = document.querySelectorAll(".expenditure_record");
    const submitBtn = document.getElementById("submit-btn");
    const inputAmount = document.getElementById("icome-amount");
    const expenditureAmount = document.getElementById("expenditure-amount");

    const toggleFormVisibility = (forms, visible) => {
      forms.forEach(form => {
        form.style.display = visible ? "block" : "none";
      })
    }

    const resetForm = forms => {
      forms.forEach(form => {
        const inputs = form.querySelectorAll("input");
        inputs.forEach(input => input.value = "");
      });
    };

    toggleFormVisibility(incomeForm, false);
    toggleFormVisibility(expenditureForm, false);
    submitBtn.style.display = "none";

    resetForm(incomeForm);
    resetForm(expenditureForm);
    select.value = "";

    select.addEventListener("change", () => {
      const value = select.value;

      if (value === "income_record") {
        toggleFormVisibility(incomeForm, true);
        toggleFormVisibility(expenditureForm, false);
        submitBtn.style.display = "block";
      } else if (value === "expenditure_record") {
        toggleFormVisibility(incomeForm, false);
        toggleFormVisibility(expenditureForm, true);
        submitBtn.style.display = "block";
      } else if (value === "") {
        toggleFormVisibility(incomeForm, false);
        toggleFormVisibility(expenditureForm, false);
        submitBtn.style.display = "none";
      }
    })
  })

  submitBtn.addEventListener("click", (e) => {
    e.preventDefault();

    // Get the values of the input fields
    const incomeAmount = document.getElementById("income-details-input")?.value;
    const expenditureAmount = document.querySelector("input[name='record[expenditure_amount]']")?.value;

    // Check if both fields are empty
    if (!incomeAmount && !expenditureAmount) {
      alert("You can't enter an empty amount.");
    } else {
      // If the validation passes, submit the form
      e.target.closest("form").submit();
    }
  });
</script>